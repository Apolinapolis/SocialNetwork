{"version":3,"file":"static/js/432.c0e80574.chunk.js","mappings":"6HACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAuG,sBAAvG,EAAyK,0BAAzK,EAA6M,yB,uBCI7M,MAUA,EAVoBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKR,EAAMS,MAAOC,IAAI,SAC3BH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIX,EAAKK,SAAEN,EAAMa,SACxB,E,wBCRd,MAMA,EANiBb,IAETO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAUC,SAAEN,EAAMc,U,4CCI1C,MAqBMC,GAAcC,EAAAA,EAAAA,GAAiB,IAQ/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAPJlB,IACbG,EAAAA,EAAAA,MAAA,QAAMiB,SAAUpB,EAAMqB,aAAaf,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUX,KAAK,iBAAiBY,SAAY,CAACC,EAAAA,EAAWX,GAAcY,YAAY,sCACzGpB,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAMrB,EA/BiBN,IAEb,IAAI4B,EAAQ5B,EAAM6B,YACdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAAU1B,EAAAA,EAAAA,KAAC2B,EAAU,CAACrB,KAAMoB,EAAOpB,KAAMX,GAAI+B,EAAO/B,GAAIO,MAAOwB,EAAOxB,UAC1G0B,EAAkBP,EAAMd,QAAQkB,KAAII,IAAQ7B,EAAAA,EAAAA,KAAC8B,EAAO,CAACjC,UAAWC,EAAWS,QAASsB,EAAKtB,QAASZ,GAAI,UAI1G,OAAKF,EAAMsC,QAGPnC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAAEwB,KACjCvB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAWC,UAC3BC,EAAAA,EAAAA,KAAA,OAAAD,SAAM6B,OAEN5B,EAAAA,EAAAA,KAACU,EAAmB,CAACG,SAVNmB,IAAWvC,EAAMwC,YAAYD,EAAKE,eAAe,QAE5ClC,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAAC9B,GAAI,UAShC,E,cCtBd,IAAI+B,EAA8Bf,IAAK,CAAQU,OAAQV,EAAMgB,KAAKN,S,cCMlE,SAAeO,E,QAAAA,KAAQC,EAAAA,EAAAA,KAJAlB,IAAK,CAAOC,YAAaD,EAAMC,gBAE5BkB,IAAqB,CAACP,YAAcC,IAAoBM,GAASC,EAAAA,EAAAA,GAAmBP,GAAgB,ODF7FQ,IAC7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAKrD,MAAMsC,QACT/B,EAAAA,EAAAA,KAAC0C,EAAS,IAAKI,KAAKrD,SADKO,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAAC9B,GAAI,UAElD,EAGJ,OAAOkC,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,EAAkB,GCJjE,CAAsFI,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"item\":\"Dialogs_item__q23mU\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import { NavLink } from 'react-router-dom'\nimport s from './../Dialogs.module.css'\n\n\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={s.item}>\n            <img src={props.photo} alt=\"XXX\" />\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem","import s from './../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}\n\nexport default Message","import s from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Message from \"./Message/Message\"\nimport { Field, reduxForm } from \"redux-form\"\nimport { Textarea } from '../common/FormControls';\nimport { maxLengthCreator, required } from '../../utilits/validators/validators';\n\nconst Dialogs = (props) => {\n    \n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} photo={dialog.photo} />)\n    let messageElements = state.message.map(mess => <Message className={s.message} message={mess.message} id={'123'} />)\n\n    const addNewMessage = (text) => { props.sendMessage(text.newMessageBody) }\n\n    if (!props.isAuth) { return <Navigate to={\"/login\"} /> }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>{dialogsElements}</div>\n            <div className={s.messages}>\n            <div>{messageElements}</div>\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    )\n}\n\nconst maxlength10 = maxLengthCreator(10)\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}> \n        <div><Field component={Textarea} name=\"newMessageBody\" validate = {[required , maxlength10]} placeholder='Вводи'/></div>\n        <div><button>Send</button></div>\n    </form>\n}\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\n\nexport default Dialogs","import React from \"react\"\nimport { Navigate } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nlet mapStateToPropsForRedirect = (state) => ({ isAuth: state.auth.isAuth })\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component{\n        render () {\n            if (!this.props.isAuth) {return <Navigate to={\"/login\"}/>}\n            return <Component {...this.props} />\n        }\n    }\n  \n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n} ","import Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport {withAuthRedirect} from \"../Hoc/WithAuthRedirect\"\nimport { sendMessageCreator } from '../Redux/dialogsReducer';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => ({dialogsPage: state.dialogsPage})\n\nlet mapDispatchToProps = (dispatch) => {return {sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))}}}\n\nexport default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect) (Dialogs)"],"names":["props","path","id","_jsxs","className","s","children","_jsx","src","photo","alt","NavLink","to","name","message","maxlength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","DialogItem","messageElements","mess","Message","isAuth","text","sendMessage","newMessageBody","Navigate","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","React","render","this","Dialogs"],"sourceRoot":""}